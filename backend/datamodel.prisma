type User{
    id: ID! @id
    email: String! @unique
    encryptedPassword: String!
    Name: String
    studentNumber: String
    phoneNumber: String
    sex: String
    isMaster: Club @relation(name:"ClubMaster")
    notifications:[Notification] @relation(name:"UserNotification")
    applications:[Application]
    rooms:[Room]
    clubs:[Club] @relation(name: "ClubMember")
    university: String!
    major: String!
    auth: Boolean
}

type Club{
    id: ID! @id
    name: String!
    bio: String!
    description: String!
    logo: String
    type: String!
    socialUrl: String
    socialDisplay: Boolean @default(value:false)
    clubImage: File @relation(name:"ClubImg")
    master: User! @relation(name:"ClubMaster", link: INLINE)
    questions: [Question] @relation(name:"ClubQuestion")
    applications: [Application]
    members:[User] @relation(name: "ClubMember")
    posts:[Post] @relation(name: "ClubPost")
}

type Room{
    id: ID! @id
    participants: [User!]!
    messages: [Message!]!
}

type Message {
    id: ID! @id
    text: String!
    from: User! @relation(name: "From")
    to: User!   @relation(name: "To")
    room: Room!
    created: DateTime! @createdAt
}

type Question{
    id: ID! @id
    owner: Club! @relation(name:"ClubQuestion", link: INLINE)
    subject: String
    type: String
    options:[String] @scalarList(strategy: RELATION)
}

type Application{
    id: ID! @id
    user: User!
    club: Club!
    answer: [String]! @scalarList(strategy: RELATION)
    status: String @default(value:"UNCHECKED")
    created: DateTime! @createdAt
}

type Notification{
    id: ID! @id
    user: User! @relation(name:"UserNotification", link:INLINE)
    content: String!
    checked: Boolean! @default(value:false)
    created: DateTime! @createdAt
}

type File{
    id: ID! @id
    url: String!
    club: Club! @relation(name:"ClubImg", link: INLINE)
}

type Post{
    id: ID! @id
    title: String!
    content: String!
    user: User!
    club: Club! @relation(name:"ClubPost")
    files: [File!]!
    type: String @default(value:"NORMAL")
    comments:[Comment!] @relation(name:"PostComment")
    status: String! @default(value:"ORIGINAL")
    created: DateTime! @createdAt
    updated: DateTime @updatedAt
}

type Comment{
    id: ID! @id
    user: User!
    post: Post! @relation(name:"PostComment")
    content: String!
    status: String! @default(value:"ORIGINAL")
    created: DateTime! @createdAt
    updated: DateTime @updatedAt
    subComments: [SubComment] @relation(name:"SubComment")
}

type SubComment{
    id: ID! @id
    user: User!
    content: String!
    status: String! @default(value:"ORIGINAL")
    created: DateTime! @createdAt
    updated: DateTime @updatedAt
    comment: Comment! @relation(name:"SubComment")
}

type Secret{
    id: ID! @id
    email: String!
    secret: String!
    auth: Boolean @default(value:false)
}
